[
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Triển khai một website thương mại điện tử trên nền tảng AWS (Amazon Web Services) bằng cách tích hợp nhiều dịch vụ đám mây như EC2, S3, RDS, Route 53 và Elastic IP. Mô hình triển khai này giúp website vận hành ổn định, bảo mật, linh hoạt mở rộng, và tiết kiệm chi phí, đồng thời tận dụng sức mạnh của hạ tầng AWS để đạt hiệu suất tối ưu trong môi trường thực tế.\nVới việc triển khai, bạn sẽ có được những ưu điểm sau:\nHiệu suất cao và khả năng xử lý linh hoạt trên cloud (EC2, RDS) Dễ mở rộng hệ thống theo nhu cầu (Auto Scaling, RDS scaling) Độ tin cậy và tính sẵn sàng cao (S3 có độ bền 99.999999999%, Route 53 phân giải nhanh) Bảo mật tốt với IAM, VPC, mã hóa dữ liệu và phân quyền truy cập Dễ dàng quản lý và cấu hình (các dịch vụ đều có giao diện và API hỗ trợ tốt) Tối ưu chi phí, đặc biệt với Free Tier (EC2 750h, S3, RDS) Lưu trữ linh hoạt, bảo mật và bền vững cho dữ liệu và tài nguyên tĩnh (S3) Quản lý tên miền chuyên nghiệp và định tuyến thông minh (Route 53) Duy trì IP cố định cho server, thuận tiện trỏ tên miền (Elastic IP) Hỗ trợ triển khai nhanh chóng cho ứng dụng web full-stack Từ những ưu điểm đã liệt kê bạn sẽ thấy việc triển khai dựa trên các công nghệ này khá thú vị và tính thực tiễn cao.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/",
	"title": "Chuẩn bị VPC và EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này chúng ta tiến hình tạo VPC và EC2. Để tối ưu và tiết kiệm chi phí các bước thì EC2 chúng ta sẽ dụng bản freetier.\nNội dung Tạo VPC Tạo EC2 "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.1-createvpc/",
	"title": "Tạo VPC ",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Lab VPC Truy cập giao diện quản trị dịch vụ VPC\nClick Your VPC. Xem đã có VPC mặc định chưa, nếu chưa có tiến hành tạo VPC theo bài lab tham khảo đã cho phần trước. Ở workshop này chúng ta sử dụng VPC mặc định. "
},
{
	"uri": "//localhost:1313/vi/3-deploy-web-to-aws/3.1-uploadtos3/",
	"title": "Triển khai source lên S3",
	"tags": [],
	"description": "",
	"content": " Truy cập vào bucket đã tạo và click chọn upload Tại trang upload Click chọn Add files. Sau đó tải lên file đã đóng gói ở phần trước Sau khi chọn file, thông tin file cần tải lên sẽ được hiện thị Sau đó click vào Upload để tải file lên Sau khi tải file thành công sẽ có trạng thái là Succeeded Click vào file vừa tải để xem thông số các chi tiết Xem các quyền của bucket chứa file đã tải lên Click vào file vừa tải lên, sau đó click vào permissions để xem các quyền với file vừa tạo Click chọn vào Object action ở bên phải Sau đó chọn vào Share with a presigned URL Giao diện Share with a presigned URL sẽ xuất hiện Click chọn Minutes Điền 45 vào Number of minutes Click vào create presigned URL Thông báo sẽ xuất hiện, sau đó click vào Copy presigned URL để lưu đường dẫn tới file vừa tạo Vậy là bạn đã xong bước đầu tiên của phần triển khai web lên AWS.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Triển khai ứng dụng E-Commerce Full-Stack chuyên về điện tử bằng AWS",
	"tags": [],
	"description": "",
	"content": "Triển khai ứng dụng E-Commerce Full-Stack chuyên về điện tử bằng AWS Tổng quan Để triển khai 1 web E-Commerce Full-Stack chuyên về điện tử có rất nhiều cách khác nhau. AWS là một giải pháp tuyệt với để thực hiện hoá dự án của chúng ta. Trong workshop này chúng ta sẽ triển khai lên AWS bằng các dịch vụ EC2, S3, RDS, Route53,… Dưới đây là mẫu kiến trúc của một web E-Commerce Full-Stack chuyên về điện tử triển khai trên AWS.\nNội dung Giới thiệu Các bước chuẩn bị Triển khai Kết luận và hướng phát triển Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rĐể thực hiện workshop này một cách tốt bạn cần trang bị các kiến thức liên quan đến VPC, EC2, RDS and Route53.\nDưới đây là các bài lab có thể hỗ trợ bạn :\nKiến thức cơ bản về mạng với Amazon VPC Kiến thức cơ bản về máy chủ ảo với Amazon EC2 Kiến thức cơ bản về cơ sở dữ liệu với RDS Quản lý DNS lai với Amazon Route 53 Từ những bài lab trên sẽ mang lại các kiến thức nền tảng để triển khai ứng dụng web xuyên suốt quá trình làm workshop của bạn.\nNội dung Chuẩn bị VPC và EC2 Instance Tạo S3 Tạo và cấu hình RDS Tải source code và đóng gói thành file jar Cấu hình Route53 "
},
{
	"uri": "//localhost:1313/vi/3-deploy-web-to-aws/3.2-configec2/",
	"title": "Cấu hình EC2 và kết nối tới S3",
	"tags": [],
	"description": "",
	"content": " Truy cập vào EC2 đã tạo và click copy địa chỉ Public IPv4 address Mở CMD truy cập vào thư mục chứa keypair EC2 và thực hiện đoạn code sau để SSH tới EC2 ssh -i \u0026#34;your-keypair.pem\u0026#34; ec2-user@\u0026lt;EC2-PUBLIC-IP\u0026gt; Copy đường dẫn tới file jar đã tải lên ở S3 Cấu hình đường dẫn\nClick chọn vào biểu tưởng copy để copy đường dẫn Nhập lệnh theo đoạn code bên dưới để tiến hành tải file jar từ S3 về EC2 pwd \u0026#39;links3\u0026#39; Đợi đến khi tải xong và sẽ có thông báo hiện thị 100% trên CMD Nhập lệnh theo đoạn code bên dưới để tiến hành đổi tên file mv \u0026#39;namefile\u0026#39; newName ls Tiến hành cài đặt java 22 bằng đoạn lệnh bên dưới sudo yum install java-22 ls Đợi gói java 22 cài đặt vào EC2 Tiến hành các bước sau để chạy ứng dụng web Kiểm tra phiên bản java Chạy ứng dụng java -version java -jar DASpring.jar ls Xem các thông tin của ứng dụng đang chạy Cài đặt thêm port cho inbound rules Click add Rule Click chọn Custom TCP Nhập port 8080 Click chọn Anywhere Click vào Save rules Vậy là bạn đã hoàn tất các bước triển khai ứng dụng E-Commerce Full-Stack chuyên về điện tử bằng AWS. Ở phần kế tiếp chúng ta sẽ thực hiện test web vừa triển khai lên AWS.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.2-createec2/",
	"title": "Tạo EC2",
	"tags": [],
	"description": "",
	"content": "Tạo EC2 Truy cập vào giao diện quản trị dịch vụ EC2 Click Instances. Click Launch instances. Tại trang Launch instance Tại mục Name and tags điền tên của EC2 là MyElectronicShop. Click Quick Start chọn Amazon Linux. Kéo xuống đoạn Amazon Machine Image (AMI), click chọn Amazon Linux 2023 kernel-6.1 AMI Tiếp tục kéo xuống đoạn Key pair, click chọn Create new key pair Điền Key pair name là ElectronicShopKeypairEC2. Chọn Key pair type là RSA. Chọn Private key file format là .pem. Click Create key pair. Kéo xuống phần Network settings và cấu hình như sau Click chọn Create security group ở phần Firewall (security groups). Click chọn Allow SSH traffic from. Tuỳ chọn của Allow SSH traffic from là Anywhere. Click chọn Launch instance. Sau khi tạo thành công chúng ta quay lại Instances Sẽ thấy trạng thái Instance state là running. Click vào Instance ID để xem thông số chi tiết EC2 vừa tạo. Kéo xuống thêm một đoạn click vào mục Security, để xem các thông số về Inbound rules và Outbound rules. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-creates3/",
	"title": "Tạo S3",
	"tags": [],
	"description": "",
	"content": "Tạo S3 Trong bước này chúng ta sẽ tiến hành tạo S3. Đây là bước chuẩn bị cho phần triển khai file jar của source code lên S3, chúng ta sẽ gặp ở phần tiếp theo\nTruy cập vào giao diện quản trị dịch vụ S3 Click vào Create bucket. Ở mục Bucket type chúng ta sẽ chọn các cấu hình như sau Click chọn General purpose. Đặt tên Bucket name là mySpringbootApp. Ở các mục Bucket Versioning click chọn Disable và mục Default encryption chọn Server-side encryption with Amazon S3 managed keys (SSE-S3) Kéo xuống tới đoạn Bucket Key Click chọn Enable. Sau đó click chọn Create Bucket. Sau khi tạo xong sẽ hiện kết quả như hình bên dưới Tiếp theo chúng ta sẽ thực hiện tạo và cấu hình RDS.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.3-createrds/",
	"title": "Tạo RDS",
	"tags": [],
	"description": "",
	"content": "Tạo RDS Trong bước này chúng ta sẽ tiến hành tạo RDS. Đây là bước chuẩn bị khá là quan trọng cho việc triển khai dữ liệu lên RDS ở các phần phía sắp tới\nTruy cập vào giao diện quản trị dịch vụ RDS Click vào Databases. Giao diện quản trị dịch vụ RDS sẽ xuất hiện, click vào Create database Giao diện Create database sẽ xuất hiện Phần Choose a database creation method click vào Standard create. Phần Engine options click vào MySQL. Kéo xuống thêm một đoạn Phần Templates click chọn Free tier. Phần Availability and durability sẽ được tự động chọn là Single-AZ DB instance deployment (1 instance). Tiếp tục kéo xuống một đoạn Ở phần DB instance identifier nhập tên database của bạn. Master username nhập là admin. Ở phần Credentials management click chọn Self managed. Tiếp tục kéo xuống thêm một đoạn Nhập Master password. Nhập Confirm master password. Tiếp tục kéo xuống đoạn VPC Phần Virtual private cloud (VPC) click chọn Default VPC. Phần DB subnet group click chọn default. Phần Public access click chọn yes. Phần VPC security group (firewall) click chọn Choose existing. Tiếp tục kéo xuống đoạn Database authentication Phần Database authentication options click chọn Password authentication. Phần Monitoring mặc định là Database Insights - Standard. Kéo xuống đoạn cuối trang, click chọn vào Create database Sau khi đã tạo xong, ở bảng hiện thị database sẽ có database vừa tạo với trạng thái là Available Click chọn vào database vừa tạo để xem các thông số chi tiết, chú ý đến endpoint sẽ là đường link kết nối đến database của ứng dụng Tiếp tục kéo xuống đoạn Connectivity \u0026amp; security và chúng ta có thể thấy ứng dụng chạy trên port 3306 Mở ứng dụng MySQL Community, bạn có thể tải ứng dụng Click chọn vào mục Database. Click chọn Connect to Database. Hộp thoại Connect to database sẽ xuất hiện Phần Connection Method click chọn Standard. Phần Hostname dán url của database vừa tạo trên rds. Phần username nhập là admin. Click chọn vào ok để tiến hành kết nối, sau đó nhập thêm mật khẩu của database vừa tạo vào. Xuất hiện giao diện ứng dụng, có các thông tin của database vừa tạo Vậy là chúng ta đã chuẩn bị xong phần về RDS, ở bước tiếp theo chúng ta sẽ chuyển qua bước tải source code và đóng gói thành file jar.\n"
},
{
	"uri": "//localhost:1313/vi/3-deploy-web-to-aws/3.3-test/",
	"title": "Test thử đường link vừa mới deploy",
	"tags": [],
	"description": "",
	"content": "Truy cập đường link bạn đã cấu hình để truy cập ngay website vừa mới triển khai của bạn.\nBạn cũng có thể tham khảo đường link sau:\nshop.huyanh.click\nSau khi kiểm thử website, các chức năng đều đầy đủ và hoạt động tốt.\n"
},
{
	"uri": "//localhost:1313/vi/3-deploy-web-to-aws/",
	"title": "Triển khai",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sẽ thực hiện triển khai ứng dụng E-Commerce Full-Stack chuyên về điện tử lên AWS\nNội dung 3.1. Triển khai source lên S3\n3.2. Cấu hình EC2 và kết nối tới S3\n3.3. Test thử đường link vừa mới deploy\n"
},
{
	"uri": "//localhost:1313/vi/4-conclusion-future/",
	"title": "Kết luận và hướng phát triển",
	"tags": [],
	"description": "",
	"content": "📌 Kết luận và Hướng phát triển 🔍 Kết luận Thông qua việc triển khai và so sánh giữa mô hình sử dụng Amazon EC2, S3 và RDS với các phương pháp triển khai khác (như shared hosting, VPS truyền thống hoặc nền tảng PaaS như Heroku), có thể thấy rằng AWS cung cấp nhiều ưu điểm vượt trội về khả năng mở rộng, linh hoạt và quản lý tài nguyên.\nEC2 mang lại sức mạnh xử lý linh hoạt, S3 cung cấp hệ thống lưu trữ đối tượng ổn định và mở rộng tốt, trong khi RDS đơn giản hóa việc quản lý cơ sở dữ liệu với các tính năng sẵn có như tự động sao lưu, bảo mật và khả năng mở rộng.\nTuy nhiên, chi phí có thể cao hơn nếu không tối ưu hóa tài nguyên và theo dõi sử dụng thường xuyên.\n🚀 Hướng phát triển Trong tương lai, có thể nâng cấp quy trình triển khai bằng cách tích hợp hệ thống CI/CD sử dụng các dịch vụ gốc của AWS như:\nAWS CodePipeline AWS CodeBuild AWS CodeDeploy Những dịch vụ này cho phép tự động hóa quy trình build, test và deploy, giúp giảm thao tác thủ công và tăng tốc độ phát hành tính năng. Ngoài ra, việc áp dụng hạ tầng dưới dạng mã (Infrastructure as Code) với AWS CloudFormation hoặc Terraform sẽ tăng tính tự động hóa, đảm bảo tính nhất quán giữa các môi trường và phù hợp với phương pháp DevOps hiện đại.\n📊 Bảng so sánh triển khai Tiêu chí AWS (EC2 + S3 + RDS) VPS/Shared Hosting Heroku / Vercel / PaaS Hiệu năng Cao Trung bình / Hạn chế Phụ thuộc vào gói dùng Khả năng mở rộng Rất tốt (Auto Scaling) Thủ công Tốt (theo gói dịch vụ) Quản lý hệ thống Tự quản lý (chủ động hơn) Giới hạn quyền truy cập Được quản lý hoàn toàn Cấu hình linh hoạt Rất linh hoạt Hạn chế Hạn chế Tích hợp CI/CD với AWS Tích hợp sâu (CodeBuild\u0026hellip;) Khó hoặc không có Có sẵn tích hợp Chi phí Tùy theo mức sử dụng Thấp Miễn phí/cao theo gói Phù hợp cho sản phẩm lớn ✅ ❌ ❌ / Trung bình Phù hợp để học tập, MVP ✅ (với Free Tier) ✅ ✅ "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.4-download-source-convert-jar/",
	"title": "Tải source code và đóng gói thành file jar",
	"tags": [],
	"description": "",
	"content": "Tải source code và đóng gói thành file jar Trong bước này chúng ta sẽ tiến hành tải source code và đóng gói thành file jar. Đây là bước chuẩn bị quan trọng cho việc triển khai source code lên S3\nTruy cập vào giao diện trang repo github Click vào Download Zip. Tải về mở file application.properties tiến hình cấu hình như sau spring.datasource.url= ----urlRDSdatabase---- spring.datasource.username= -----yourUsername---- spring.datasource.password= ----yourPassword----- Phần url lấy ở database RDS đã tạo trước đó. User và password cũng được tạo lúc ban đầu tạo database RDS. Đóng gói thành file jar, tham khảo đường dẫn sau để đóng gói thành file JAR. Vậy là chúng ta đã chuẩn bị xong phần tải source code và đóng gói thành file jar , ở bước tiếp theo chúng ta sẽ chuyển qua cấu hình Route53.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.5-route53config/",
	"title": "Cấu hình Route 53",
	"tags": [],
	"description": "",
	"content": "Cấu hình Route 53 Trong bước này chúng ta sẽ tiến hành tải cấu hình Route 53. Đây là bước cuối cùng của phần chuẩn bị này\nTruy cập vào giao diện trang quản lý domains Click vào Register domains. Giao diện trang quản lý domains sẽ xuất hiện Phần Check availability for a domain nhập tên domain cần tạo, sau đó nhấn Search Sau khi tìm thấy domain phù hợp nhấn Select Cuối cùng nhấn Proceed to checkout Ở phần Pricing nhấn Next Tiến hành xem lại các thông tin trước khi Submit Kéo xuống cuối cùng của trang, tích vào ô đồng ý với điều khoản dịch vụ và Click Submit Sau khi tạo thành công, chúng ta sẽ thấy thông tin domain vừa tạo Click chọn vào domain vừa tạo để xem chi tiết các thông số Chúng ta đã chuẩn bị xong phần cấu hình Route53, ở phần sau chúng ta sẽ tới các bước triển khai.\n"
},
{
	"uri": "//localhost:1313/vi/5-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Truy cập giao diện quản trị dịch vụ EC2\nClick Instances. Click chọn instance cần xoá Click Instance state. Click Terminate instance, sau đó click Terminate để xác nhận. Xóa S3 bucket Truy cập giao diện quản trị dịch vụ S3\nClick chọn S3 bucket chúng ta đã tạo cho bài thực hành. Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Xóa RDS Truy cập vào giao diện quản trị dịch vụ RDS Click chọn vào database cần xoá Click chọn vào action Click Delete. Tại ô confirm, tích xác nhận vào điều khoản dịch vụ Nhập delete me để tiến hành xóa các endpoints. Click chọn Delete để tiến hành xoá "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]